{"version":3,"sources":["webpack:///./src/constants/general.js","webpack:///./src/components/_shared/components/Button.js","webpack:///./src/components/pages/dashboard/DashboardContext.js","webpack:///./src/components/_shared/components/StyledCard.js","webpack:///./src/services/_cryptosApi.js","webpack:///./src/constants/cryptocurrencies.js","webpack:///./src/services/cryptosService.js","webpack:///./src/components/_shared/components/PageLoader.js","webpack:///./src/services/paymentService.js","webpack:///./src/components/pages/investment/InvestmentsResultsContext.js","webpack:///./src/components/_shared/components/Accordion.js","webpack:///./src/components/_shared/components/CardListDetails.js","webpack:///./src/components/_shared/components/CardListStock.js","webpack:///./src/components/_shared/components/CardListCrypto.js","webpack:///./src/components/_shared/components/Table.js","webpack:///./src/components/pages/investment/BuyInvestmentComponent.js","webpack:///./src/components/pages/investment/InvestmentsResultsComponent.js","webpack:///./src/components/_shared/components/NakedCurrencyInput.js","webpack:///./src/services/_stocksApi.js","webpack:///./src/constants/stocks.js","webpack:///./src/services/stocksService.js","webpack:///./src/components/pages/investment/FindInvestmentComponent.js","webpack:///./src/components/pages/dashboard/WalletComponent.js","webpack:///./src/components/pages/dashboard/StatementComponent.js","webpack:///./src/components/pages/dashboard/BlogTipsComponent.js","webpack:///./src/components/pages/dashboard/DashboardComponent.js","webpack:///./src/utils/array.js"],"names":["CRYPTOCURRENCY","STOCK","WhiteCircularProgress","withStyles","theme","root","color","position","width","height","CircularProgress","StyledButton","fontWeight","borderRadius","textAlign","minHeight","marginLeft","spacing","ButtonMui","Button","children","isLoading","buttonProps","DashboardContext","React","createContext","Provider","Consumer","Card","backgroundColor","padding","Paper","title","subtitle","cardProps","variant","className","api","axios","create","baseURL","process","headers","get","url","CRYPTO_SYMBOLS","getCryptos","a","symbols","map","crypto","cryptosApi","join","then","res","status","data","quoteResponse","result","getCryptosByList","cryptosList","PageLoader","props","left","right","top","display","justifyContent","alignItems","size","propTypes","requestPaymentCrypto","cryptoData","amount","Promise","resolve","setTimeout","success","symbol","type","volume","regularMarketPrice","toFixed","date","Date","requestPaymentStock","stockData","quantity","last","InvestmentsResultsContext","StyledAccordion","margin","boxShadow","palette","background","cardLighter","expanded","MuiAccordion","Accordion","CardListDetails","items","Grid","container","item","i","key","xs","md","Box","py","Typography","label","value","useStyles","makeStyles","quantityStock","CardListStock","itemsList","classes","useState","setExpanded","setQuantityStock","handleQuantityStock","stockValue","operation","buyInvestment","isPaymentLoading","onChange","panel","event","isExpanded","AccordionSummary","expandIcon","AccordionDetails","low","high","open","toLocaleString","IconButton","onClick","fullWidth","CardListCrypto","table","minWidth","fromCurrency","shortName","regularMarketDayLow","regularMarketDayHigh","regularMarketChangePercent","BuyInvestmentComponent","resultsRoot","overflowY","InvestmentsResultsComponent","clearResults","resultsData","Slide","in","direction","mb","sm","Hidden","smDown","StyledCard","stocksData","length","listType","cryptosData","inputsWrapper","fontSize","typography","pxToRem","outline","border","cursor","NakedCurrencyInput","target","select","prefix","onChangeEvent","Accept","path","auth","STOCKS_SYMBOLS","getStocksByPrice","stocksApi","filter","t","amountModal","breakpoints","down","FindInvestmentComponent","setResultsData","useHistory","isModalOpened","setIsModalOpened","setAmount","floatAmount","setFloatAmount","isFinding","setIsFinding","findInvestments","bottom","zIndex","elevation","e","maskedValue","floatValue","floatingButton","card","WalletComponent","wallet","walletData","mainWalletData","setMainWalletData","useEffect","newWalletData","concat","stock","price","updatedAt","boughtAt","find","amountInvested","regularMarketOpen","eachAsset","component","CardContent","StatementComponent","statement","List","dense","ListItem","ListItemIcon","style","ListItemText","primary","secondary","blogRoot","BlogTipsComponent","ListItemAvatar","Avatar","alt","src","Divider","HomepageComponent","setWallet","isLoadingDashboard","setIsLoadingDashboard","setIsPaymentLoading","setWalletData","actualBalance","setActualBalance","setStatement","updateWalletData","getBalance","stockWallet","arr","stocksList","self","indexOf","cryptoWallet","stocksBalance","y","reduce","b","cryptosBalance","buyCrypto","handleResponse","buyStock","addItemToWallet","itemData","itemType"],"mappings":"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","file":"4.32dcfc961676d7b3166d.js","sourcesContent":["export const CRYPTOCURRENCY = \"CRYPTOOPTION\";\r\nexport const STOCK = \"STOCKOPTION\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Button as ButtonMui,\r\n  withStyles,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\n\r\nconst WhiteCircularProgress = withStyles((theme) => ({\r\n  root: {\r\n    color: \"#fff\",\r\n    position: \"absolute\",\r\n    width: \"20px !important\",\r\n    height: \"20px !important\",\r\n  },\r\n}))(CircularProgress);\r\n\r\nconst StyledButton = withStyles((theme) => ({\r\n  root: {\r\n    fontWeight: 600,\r\n    borderRadius: \"40px\",\r\n    textAlign: \"center\",\r\n    color: \"#fff\",\r\n    minHeight: 50,\r\n\r\n    \"& .MuiSvgIcon-root\": {\r\n      width: 18,\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n  },\r\n}))(ButtonMui);\r\n\r\nconst Button = ({ children, isLoading, ...buttonProps }) => {\r\n  return (\r\n    <StyledButton {...buttonProps}>\r\n      {isLoading ? <WhiteCircularProgress /> : <>{children}</>}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nconst DashboardContext = React.createContext({});\r\nexport const DashboardProvider = DashboardContext.Provider;\r\nexport const DashboardConsumer = DashboardContext.Consumer;\r\n\r\nexport default DashboardContext;","import React from 'react';\r\nimport { Paper, Typography, withStyles } from '@material-ui/core';\r\n\r\n const Card = withStyles(theme => ({\r\n  root: {\r\n    backgroundColor: '#3A4361',\r\n    borderRadius: 30,\r\n    padding: theme.spacing(3),\r\n  }\r\n}))(Paper);\r\n\r\nexport default ({\r\n  title, \r\n  subtitle, \r\n  children, \r\n  ...cardProps\r\n}) => (\r\n  <Card {...cardProps}>\r\n    {title && <Typography variant={'body1'} className={'title'}>{title}</Typography>}\r\n    {subtitle && <Typography variant={'body2'} className={'subtitle'}>{subtitle}</Typography>}\r\n    \r\n    {children}\r\n  </Card>\r\n);\r\n","import axios from \"axios\";\r\n\r\nconst API_URL = process.env.CRYPTO_API;\r\nconst API_KEY = process.env.CRYPTO_API_KEY;\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: { \r\n    \"Content-Type\": \"application/json\", \r\n    \"X-RapidAPI-Host\": \"apidojo-yahoo-finance-v1.p.rapidapi.com\",\r\n    \"X-RapidAPI-Key\": API_KEY\r\n  },\r\n});\r\n\r\nconst get = url => api.get(`${url}&region=US`);\r\n\r\nexport { get };\r\n","export const CRYPTO_SYMBOLS = ['BTC', 'ETH', 'USDT', 'XRP', 'BCH', 'BNB'];","import * as cryptosApi from \"./_cryptosApi\";\r\nimport { CRYPTO_SYMBOLS } from \"../constants/cryptocurrencies\";\r\n\r\nexport const getCryptos = async () => {\r\n  const symbols = CRYPTO_SYMBOLS.map(crypto => `${crypto}-USD`);\r\n  return cryptosApi\r\n    .get(`market/v2/get-quotes?symbols=${symbols.join('%252C')}`)\r\n    .then(res => {\r\n      if(res.status === 200) {\r\n        return res.data.quoteResponse.result;\r\n      }\r\n    });\r\n};\r\n\r\nexport const getCryptosByList = async cryptosList => {\r\n  return cryptosApi\r\n    .get(`market/v2/get-quotes?symbols=${cryptosList.join('%252C')}`)\r\n    .then(res => {\r\n      if(res.status === 200) {\r\n        return res.data.quoteResponse.result;\r\n      }\r\n    });\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Box, CircularProgress } from \"@material-ui/core\";\r\n\r\nconst PageLoader = (props) => {\r\n  return (\r\n    <Box\r\n      position={\"absolute\"}\r\n      left={0}\r\n      right={0}\r\n      top={0}\r\n      display={\"flex\"}\r\n      justifyContent={\"center\"}\r\n      alignItems={\"center\"}\r\n      width={\"100%\"}\r\n      height={\"100vh\"}\r\n    >\r\n      <CircularProgress size={50} />\r\n          \r\n    </Box>\r\n  );\r\n};\r\n\r\nPageLoader.propTypes = {};\r\n\r\nexport default PageLoader;\r\n","import { CRYPTOCURRENCY, STOCK } from \"../constants/general\";\r\n\r\nexport const requestPaymentCrypto = async (cryptoData, amount) => {\r\n  await new Promise((resolve) => setTimeout(resolve, 2000)); //fake loading payment\r\n  return {\r\n    success: true,\r\n    data: {\r\n      symbol: cryptoData.symbol,\r\n      type: CRYPTOCURRENCY,\r\n      volume: (amount / cryptoData.regularMarketPrice).toFixed(6),\r\n      amount: amount,\r\n      date: new Date(),\r\n    }\r\n  };\r\n};\r\n\r\nexport const requestPaymentStock = async (stockData, quantity) => {\r\n  await new Promise((resolve) => setTimeout(resolve, 2000)); //fake loading payment\r\n  return {\r\n    success: true,\r\n    data: {\r\n      symbol: stockData.symbol,\r\n      type: STOCK,\r\n      volume: quantity,\r\n      amount: quantity * stockData.last,\r\n      date: new Date(),\r\n    }\r\n  };\r\n};\r\n","import React from 'react';\r\n\r\nconst InvestmentsResultsContext = React.createContext({});\r\nexport const InvestmentsResultsProvider = InvestmentsResultsContext.Provider;\r\nexport const InvestmentsResultsConsumer = InvestmentsResultsContext.Consumer;\r\n\r\nexport default InvestmentsResultsContext;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Accordion as MuiAccordion,\r\n  AccordionDetails,\r\n  AccordionSummary as MuiAccordionSummary,\r\n\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\n\r\nconst StyledAccordion = withStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"transparent\",\r\n    margin: `${theme.spacing(1)}px`,\r\n    boxShadow: \"none\",\r\n    borderRadius: `${theme.spacing(3)}px !important`,\r\n\r\n    \"&:before\": {\r\n      display: \"none\",\r\n    },\r\n    \"&$expanded\": {\r\n      boxShadow: \"0 0 12px 8px rgb(0 0 0 / 7%);\",\r\n    },\r\n    \"&.even\": {\r\n      backgroundColor: theme.palette.background.cardLighter,\r\n    },\r\n  },\r\n  expanded: {\r\n    boxShadow: \"0 0 3px -3px rgba(0,0,0,.05)\",\r\n  },\r\n}))(MuiAccordion);\r\n\r\nconst Accordion = ({ children, ...props }) => (\r\n  <StyledAccordion {...props}>{children}</StyledAccordion>\r\n);\r\n\r\nexport default Accordion;\r\n","import { Box, Grid, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst CardListDetails = ({ items }) => (\r\n  <Grid container>\r\n    {items.map((item, i) => (\r\n      <Grid key={i} item xs={6} md={3}>\r\n        <Box minHeight={100} py={2}>\r\n          <Typography variant={\"body2\"}>{item.label}</Typography>\r\n          <Typography variant={\"body1\"}>{item.value}</Typography>\r\n        </Box>\r\n      </Grid>\r\n    ))}\r\n  </Grid>\r\n);\r\n\r\nexport default CardListDetails;","import React, { useState } from \"react\";\r\nimport {\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Box,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport InvestmentsResultsContext from \"../../pages/investment/InvestmentsResultsContext\";\r\nimport Button from \"./Button\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nimport Accordion from \"./Accordion\";\r\nimport CardListDetails from \"./CardListDetails\";\r\nimport DashboardContext from \"../../pages/dashboard/DashboardContext\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { STOCK } from \"../../../constants/general\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  quantityStock: {},\r\n}));\r\n\r\nconst CardListStock = ({ itemsList }) => {\r\n  const classes = useStyles();\r\n\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [quantityStock, setQuantityStock] = React.useState(1);\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n    setQuantityStock(1);\r\n  };\r\n\r\n  const handleQuantityStock = (stockValue, operation, amount) => {\r\n    if (operation === \"add\") {\r\n      if (stockValue * (quantityStock + 1) <= amount) {\r\n        setQuantityStock(quantityStock + 1);\r\n      }\r\n    } else {\r\n      setQuantityStock(quantityStock - 1 > 0 ? quantityStock - 1 : 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DashboardContext.Consumer>\r\n      {({ buyInvestment, isPaymentLoading }) => (\r\n        <InvestmentsResultsContext.Consumer>\r\n          {({ amount }) => (\r\n            <>\r\n              {itemsList.map((item, i) => (\r\n                <Accordion\r\n                  key={i}\r\n                  className={i % 2 ? \"even\" : \"odd\"}\r\n                  expanded={expanded === i}\r\n                  onChange={handleChange(i)}\r\n                >\r\n                  <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                    <Grid container>\r\n                      <Grid item xs={3}>\r\n                        <Typography variant={\"body1\"}>{item.symbol}</Typography>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={3}>\r\n                        <Typography variant={\"body2\"}>\r\n                          ${item.last.toFixed(2)}\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    <Box py={2} width={\"100%\"}>\r\n                      <CardListDetails\r\n                        items={[\r\n                          { label: \"Day low\", value: item.low },\r\n                          { label: \"Day high\", value: item.high },\r\n                          { label: \"Day open\", value: item.open },\r\n                          {\r\n                            label: \"Date\",\r\n                            value: new Date(item.date).toLocaleString(\"en-US\"),\r\n                          },\r\n                        ]}\r\n                      />\r\n\r\n                      <Grid container>\r\n                        <Grid item xs={4} md={3}>\r\n                          <Box>\r\n                            {amount / item.last > 1 && (\r\n                              <Box className={classes.quantityStock}>\r\n                                <IconButton\r\n                                  onClick={() =>\r\n                                    handleQuantityStock(\r\n                                      item.last,\r\n                                      \"remove\",\r\n                                      amount\r\n                                    )\r\n                                  }\r\n                                >\r\n                                  <RemoveIcon />\r\n                                </IconButton>\r\n                                <Typography variant={\"body2\"}>\r\n                                  {quantityStock}\r\n                                </Typography>\r\n                                <IconButton\r\n                                  onClick={() =>\r\n                                    handleQuantityStock(\r\n                                      item.last,\r\n                                      \"add\",\r\n                                      amount\r\n                                    )\r\n                                  }\r\n                                >\r\n                                  <AddIcon />\r\n                                </IconButton>\r\n                              </Box>\r\n                            )}\r\n                          </Box>\r\n                        </Grid>\r\n                        <Grid item xs={8} md={9}>\r\n                          <Button\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                            fullWidth\r\n                            isLoading={isPaymentLoading}\r\n                            className={\"\"}\r\n                            size={\"small\"}\r\n                            onClick={() => buyInvestment(item, amount, STOCK, quantityStock,)}\r\n                          >\r\n                            INVEST $ {(quantityStock * item.last).toFixed(2)} NOW <MonetizationOnIcon />\r\n                          </Button>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Box>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              ))}\r\n            </>\r\n          )}\r\n        </InvestmentsResultsContext.Consumer>\r\n      )}\r\n    </DashboardContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default CardListStock;\r\n","import React from \"react\";\r\nimport {\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport InvestmentsResultsContext from \"../../pages/investment/InvestmentsResultsContext\";\r\nimport Button from \"./Button\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nimport Accordion from \"./Accordion\";\r\nimport Table from \"./Table\";\r\nimport DashboardContext from \"../../pages/dashboard/DashboardContext\";\r\nimport { CRYPTOCURRENCY } from \"../../../constants/general\";\r\nimport CardListDetails from \"./CardListDetails\";\r\n\r\nconst CardListCrypto = ({ itemsList }) => {\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleChange = (panel) => (event, isExpanded) =>\r\n    setExpanded(isExpanded ? panel : false);\r\n\r\n  return (\r\n    <DashboardContext.Consumer>\r\n      {({ buyInvestment, isPaymentLoading }) => (\r\n        <InvestmentsResultsContext.Consumer>\r\n          {({ amount }) => (\r\n            <>\r\n              {itemsList.map((item, i) => (\r\n                <Accordion\r\n                  key={i}\r\n                  className={i % 2 ? \"even\" : \"odd\"}\r\n                  expanded={expanded === i}\r\n                  onChange={handleChange(i)}\r\n                >\r\n                  <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                    <Grid container>\r\n                      <Grid item xs={3}>\r\n                        <Typography variant={\"body1\"}>\r\n                          {item.fromCurrency}\r\n                        </Typography>\r\n                        <Typography variant={\"body2\"}>\r\n                          {item.shortName}\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={3}></Grid>\r\n                      <Grid item xs={3}>\r\n                        {(amount / item.regularMarketPrice).toFixed(6)}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    <Box py={2} width={\"100%\"}>\r\n                      <CardListDetails items={[\r\n                        { label: \"Day low\", value: item.regularMarketDayLow.toFixed(2) },\r\n                        { label: \"Day high\", value: item.regularMarketDayHigh.toFixed(2) },\r\n                        { label: \"Market change (%)\", value: item.regularMarketChangePercent.toFixed(2) },\r\n                        { label: \"Price\", value: item.regularMarketPrice.toFixed(2) },\r\n                      ]} />\r\n\r\n                      <Box>\r\n                        <Button\r\n                          variant={\"contained\"}\r\n                          color={\"primary\"}\r\n                          fullWidth\r\n                          isLoading={isPaymentLoading}\r\n                          className={\"\"}\r\n                          size={\"small\"}\r\n                          onClick={() => buyInvestment(item, amount, CRYPTOCURRENCY)}\r\n                        >\r\n                          BUY NOW $ {amount} <MonetizationOnIcon />\r\n                        </Button>\r\n                      </Box>\r\n                    </Box>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              ))}\r\n            </>\r\n          )}\r\n        </InvestmentsResultsContext.Consumer>\r\n      )}\r\n    </DashboardContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default CardListCrypto;\r\n","import {\r\n  Box,\r\n  makeStyles,\r\n  TableContainer,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nconst Table =  props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <TableContainer component={Box}>\r\n      <Table className={classes.table}>{props.children}</Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BuyInvestmentComponent = props => {\r\n  return (\r\n    <>\r\n      {/* TODO */}\r\n    </>\r\n  );\r\n}\r\n\r\nBuyInvestmentComponent.propTypes = {\r\n\r\n}\r\n\r\nexport default BuyInvestmentComponent;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Box, Grid, Grow, Hidden, IconButton, makeStyles, Slide, Typography } from \"@material-ui/core\";\r\nimport { useHistory, withRouter } from \"react-router-dom\";\r\nimport { getCryptos } from \"../../../services/cryptosService\";\r\nimport StyledCard from \"../../_shared/components/StyledCard\";\r\nimport PageLoader from \"../../_shared/components/PageLoader\";\r\nimport { CRYPTOCURRENCY, STOCK } from \"../../../constants/general\";\r\nimport InvestmentsResultsContext from \"./InvestmentsResultsContext\";\r\nimport CardListStock from \"../../_shared/components/CardListStock\";\r\nimport CardListCrypto from \"../../_shared/components/CardListCrypto\";\r\nimport BuyInvestmentComponent from \"./BuyInvestmentComponent\";\r\nimport { requestPayment } from \"../../../services/paymentService\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  resultsRoot: {\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    width: '100%',\r\n    height: '100vh',\r\n    padding: theme.spacing(4),\r\n    backgroundColor: theme.palette.background.default,\r\n    overflowY: 'auto'\r\n  }\r\n}));\r\n\r\nconst InvestmentsResultsComponent = ({\r\n  clearResults,\r\n  resultsData,\r\n  amount\r\n}) => {\r\n  if (!resultsData) return <PageLoader />;\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.resultsRoot}>\r\n      <Box\r\n        position={\"absolute\"}\r\n        right={20}\r\n        top={20}\r\n        onClick={() => clearResults()}\r\n      >\r\n        <IconButton>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </Box>\r\n\r\n      <InvestmentsResultsContext.Provider value={{ amount: resultsData.amount }}>\r\n        <Slide in={true} direction={\"up\"}>\r\n          <Box>\r\n            <Box mb={5} textAlign={\"center\"}>\r\n              <Grid container alignItems={\"center\"}>\r\n                <Grid item sm={12} md={5}>\r\n                  <Hidden smDown>\r\n                    <Typography variant={\"body2\"}>\r\n                      home // investing // ${amount}\r\n                    </Typography>\r\n                  </Hidden>\r\n                </Grid>\r\n\r\n                <Grid item sm={12} md={4}>\r\n                  <Box textAlign={\"center\"}>\r\n                    <Typography variant={\"h3\"}>\r\n                      Finding the best invesment\r\n                    </Typography>\r\n                    <Typography variant={\"body2\"}>\r\n                      According to your profile and how much you would like to\r\n                      invest we think these are the best results.\r\n                    </Typography>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} md={6}>\r\n                <StyledCard title={\"Stocks\"}>\r\n                  {resultsData.stocksData.length ? (\r\n                    <CardListStock listType={STOCK} itemsList={resultsData.stocksData} />\r\n                  ) : (\r\n                    <Box py={2}>\r\n                      <Typography variant={\"body2\"}>\r\n                        Oops! We couldn't find any stock for your investment. Would\r\n                        your consider increase the investmen?\r\n                      </Typography>\r\n                    </Box>\r\n\r\n                  )}\r\n                </StyledCard>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <StyledCard title={\"Cryptocurrencies\"}>\r\n                  {resultsData.cryptosData.length ? (\r\n                    <CardListCrypto listType={CRYPTOCURRENCY} itemsList={resultsData.cryptosData} />\r\n                    ) : (\r\n                      <Box py={2}>\r\n                        <Typography variant={\"body2\"}>\r\n                          Oops! We couldn't find any cryptocurrency for your investment. Would\r\n                          you mind trying back later?\r\n                        </Typography>\r\n                      </Box>\r\n                    )}\r\n                </StyledCard>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Slide>\r\n      </InvestmentsResultsContext.Provider>\r\n    </Box>\r\n  );\r\n};\r\n\r\nInvestmentsResultsComponent.propTypes = {};\r\n\r\nexport default InvestmentsResultsComponent;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Box, InputBase, makeStyles } from \"@material-ui/core\";\r\nimport CurrencyInput from \"react-currency-input\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  inputsWrapper: {\r\n    '& input': {\r\n      backgroundColor: 'transparent',\r\n      padding: theme.spacing(4),\r\n      height: 40,\r\n      fontSize: theme.typography.pxToRem(25),\r\n      outline: 0,\r\n      border: 0,\r\n      width: '100%',\r\n      color: 'white',\r\n      textAlign: 'center',\r\n      cursor: 'pointer',\r\n    }\r\n  }\r\n}));\r\n\r\nconst NakedCurrencyInput = ({ value, onChange }) => {\r\n  const classes = useStyles();\r\n  const handleFocus = (event) => event.target.select();\r\n\r\n  return (\r\n    <>\r\n      <Box className={classes.inputsWrapper}>\r\n        <CurrencyInput \r\n          onClick={handleFocus}\r\n          prefix={'$ '} \r\n          value={value} \r\n          onChangeEvent={onChange} />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NakedCurrencyInput;\r\n","import axios from \"axios\";\r\n\r\nconst API_URL = process.env.STOCK_API;\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: { \"Content-Type\": \"application/json\", Accept: \"application/json\" },\r\n});\r\n\r\nconst auth = (path) => `${path}&access_key=${process.env.STOCK_API_KEY}`;\r\nconst get = (path) => api.get(auth(path));\r\n\r\nexport { get };\r\n","export const STOCKS_SYMBOLS = ['NVDA', 'AAPL', 'AMD', 'MSFT', 'DBX', 'AMZN'];\r\n","import * as stocksApi from \"./_stocksApi\";\r\nimport { STOCKS_SYMBOLS } from \"../constants/stocks\";\r\n\r\nexport const getStocksPrices = () =>\r\n  stocksApi\r\n    .get(`intraday/latest?&symbols=${STOCKS_SYMBOLS.join(\",\")}`)\r\n    .then((res) => {\r\n      return res.status === 200 && { data: res.data.data };\r\n    });\r\n\r\nexport const getStocksByPrice = (amount) =>\r\n  stocksApi\r\n    .get(`intraday/latest?&symbols=${STOCKS_SYMBOLS.join(\",\")}`)\r\n    .then((res) => {\r\n      return (\r\n        res.status === 200 && [...res.data.data.filter((t) => t.last <= amount)]\r\n      );\r\n    });\r\n\r\nexport const getStocksByList = (stocksList) =>\r\n  stocksApi\r\n    .get(`intraday/latest?&symbols=${stocksList.join(\",\")}`)\r\n    .then((res) => {\r\n      return (\r\n        res.status === 200 && res.data.data\r\n      );\r\n    });\r\n","import React from \"react\";\r\nimport Button from \"../../_shared/components/Button\";\r\nimport { Box, Grid, makeStyles, Slide, Typography } from \"@material-ui/core\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nimport StyledCard from \"../../_shared/components/StyledCard\";\r\nimport InvisibleInput from \"../../_shared/components/NakedInput\";\r\nimport NakedInput from \"../../_shared/components/NakedInput\";\r\nimport NakedCurrencyInput from \"../../_shared/components/NakedCurrencyInput\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getStocksByPrice } from \"../../../services/stocksService\";\r\nimport { getCryptos } from \"../../../services/cryptosService\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  amountModal: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      left: 20,\r\n    },\r\n  },\r\n}));\r\n\r\nconst FindInvestmentComponent = ({ setResultsData }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const [isModalOpened, setIsModalOpened] = React.useState(false);\r\n  const [amount, setAmount] = React.useState(\"0.00\");\r\n  const [floatAmount, setFloatAmount] = React.useState(\"0.00\");\r\n  const [isFinding, setIsFinding] = React.useState(false);\r\n\r\n  const handleAmount = (e, maskedValue, floatValue) => {\r\n    if (!floatValue) maskedValue = \"0.00\";\r\n\r\n    setAmount(maskedValue);\r\n    setFloatAmount(floatValue);\r\n  };\r\n\r\n  const findInvestments = async () => {\r\n    if(floatAmount >= 50) {\r\n      setIsFinding(true);\r\n\r\n      const stocksData = await getStocksByPrice(floatAmount);\r\n      const cryptosData = await getCryptos();\r\n\r\n      setResultsData({\r\n        amount: floatAmount,\r\n        stocksData,\r\n        cryptosData,\r\n      });\r\n\r\n      setIsModalOpened(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Slide in={isModalOpened} direction={\"up\"}>\r\n        <Box\r\n          bottom={20}\r\n          right={20}\r\n          position={\"fixed\"}\r\n          zIndex={2}\r\n          className={classes.amountModal}\r\n        >\r\n          <StyledCard\r\n            elevation={15}\r\n            title={\"How much do you want to invest?\"}\r\n            subtitle={\r\n              \"We are going to choose the best options according to the amount you choose to invest.\"\r\n            }\r\n          >\r\n            <Box\r\n              position={\"absolute\"}\r\n              right={20}\r\n              top={20}\r\n              onClick={() => setIsModalOpened(false)}\r\n            >\r\n              <CloseIcon />\r\n            </Box>\r\n            <Box py={4} textAlign=\"center\">\r\n              <NakedCurrencyInput value={amount} onChange={handleAmount} />\r\n\r\n              <Typography variant={'body2'}>\r\n                *minimum amount $50\r\n              </Typography>\r\n            </Box>\r\n\r\n            <Button\r\n              variant={\"contained\"}\r\n              color={\"primary\"}\r\n              fullWidth\r\n              isLoading={isFinding}\r\n              className={classes.floatingButton}\r\n              onClick={() => {\r\n                findInvestments().then(() => {\r\n                  setIsFinding(false);\r\n                });\r\n              }}\r\n            >\r\n              FIND OPTIONS <MonetizationOnIcon />\r\n            </Button>\r\n          </StyledCard>\r\n        </Box>\r\n      </Slide>\r\n\r\n      {/* floating button */}\r\n      <Box position={\"fixed\"} bottom={40} right={40}>\r\n        <Button\r\n          variant={\"contained\"}\r\n          color={\"primary\"}\r\n          size={\"large\"}\r\n          className={classes.floatingButton}\r\n          onClick={() => setIsModalOpened(true)}\r\n        >\r\n          Invest now <MonetizationOnIcon />\r\n        </Button>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FindInvestmentComponent;\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n\r\n  card: {\r\n    backgroundColor: theme.palette.background.default,\r\n    borderRadius: 15,\r\n  }\r\n}));\r\n\r\nconst WalletComponent = ({ wallet, walletData }) => {\r\n  const classes = useStyles();\r\n\r\n  const [mainWalletData, setMainWalletData] = React.useState([]);\r\n  const [showingCryptos, setShowingCryptos] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    let newWalletData = [];\r\n\r\n    if (wallet && walletData) {\r\n      if (walletData.stocksData && walletData.stocksData.length) {\r\n        newWalletData = newWalletData.concat(\r\n          walletData.stocksData.map((stock) => ({\r\n            symbol: stock.symbol,\r\n            price: stock.last,\r\n            high: stock.high,\r\n            low: stock.low,\r\n            open: stock.open,\r\n            updatedAt: stock.date,\r\n            boughtAt: wallet.find((t) => t.symbol === stock.symbol).date,\r\n            amountInvested: wallet.find((t) => t.symbol === stock.symbol)\r\n              .amount,\r\n            volume: wallet.find((t) => t.symbol === stock.symbol).volume,\r\n          }))\r\n        );\r\n      }\r\n\r\n      if (walletData.cryptosData && walletData.cryptosData.length) {\r\n        newWalletData = newWalletData.concat(\r\n          walletData.cryptosData.map((crypto) => ({\r\n            symbol: crypto.symbol,\r\n            price: crypto.regularMarketPrice,\r\n            high: crypto.regularMarketDayHigh,\r\n            low: crypto.regularMarketDayLow,\r\n            open: crypto.regularMarketOpen,\r\n            updatedAt: new Date(),\r\n            boughtAt: wallet.find((t) => t.symbol === crypto.symbol).date,\r\n            amountInvested: wallet.find((t) => t.symbol === crypto.symbol)\r\n              .amount,\r\n            volume: wallet.find((t) => t.symbol === crypto.symbol).volume,\r\n          }))\r\n        );\r\n      }\r\n    }\r\n\r\n    setMainWalletData(newWalletData);\r\n  }, [wallet, walletData]);\r\n\r\n  if (!mainWalletData.length) {\r\n    return (\r\n      <Typography variant={'body2'}>\r\n        You don't have any assets at the moment. Would you like to invest now?\r\n      </Typography>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <Box py={3}>\r\n        <Grid container spacing={2}>\r\n          {mainWalletData.map((eachAsset, i) => (\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Card className={classes.card} component={Box}>\r\n                <CardContent>\r\n                  <Grid container>\r\n                    <Grid item xs={12}>\r\n                      <Typography variant={\"body1\"}>\r\n                        Asset: {eachAsset.symbol}\r\n                      </Typography>\r\n                      <Typography variant={\"body1\"}>\r\n                        Variation:{\" \"}\r\n                        {(\r\n                          (eachAsset.volume * eachAsset.price) /\r\n                          (eachAsset.volume * eachAsset.amountInvested)\r\n                        ).toFixed(2)}\r\n                        %\r\n                      </Typography>\r\n                      <Typography variant={\"body1\"}>\r\n                        Actual price: $ {eachAsset.price.toFixed(2)}\r\n                      </Typography>\r\n                      <Typography variant={\"body1\"}>\r\n                        Volume: {eachAsset.volume}\r\n                      </Typography>\r\n                      <hr />\r\n                      <Typography variant={\"body1\"}>\r\n                        Day high: $ {eachAsset.high.toFixed(2)}\r\n                      </Typography>\r\n                      <Typography variant={\"body1\"}>\r\n                        Day low: $ {eachAsset.low.toFixed(2)}\r\n                      </Typography>\r\n                      <Typography variant={\"body1\"}>\r\n                        Day open: $ {eachAsset.open.toFixed(2)}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WalletComponent;\r\n","import React from \"react\";\r\nimport UpIcon from \"@material-ui/icons/ExpandLess\";\r\nimport DownIcon from \"@material-ui/icons/ExpandMore\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst StatementComponent = ({ statement }) => {\r\n  if (statement.length === 0) {\r\n    return <Typography variant={'body2'}>You haven't made any transactions yet.</Typography>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <List dense>\r\n        {statement.map((item) => (\r\n          <ListItem>\r\n            <ListItemIcon>\r\n              {item.type === \"IN\" ? (\r\n                <UpIcon style={{ color: \"green\" }} />\r\n              ) : (\r\n                <DownIcon style={{ color: \"red\" }} />\r\n              )}\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              primary={item.data.symbol}\r\n              secondary={`$ ${item.data.amount.toFixed(2)}`}\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StatementComponent;\r\n","import { Avatar, Divider, List, ListItem, ListItemAvatar, ListItemText, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  blogRoot: {\r\n\r\n  }\r\n}));\r\n\r\nconst BlogTipsComponent = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <List className={classes.blogRoot}>\r\n        <ListItem alignItems=\"flex-start\">\r\n          <ListItemAvatar>\r\n            <Avatar alt=\"stock\" src=\"https://g.foolcdn.com/editorial/images/506661/gettyimages-523155194.jpg\" />\r\n          </ListItemAvatar>\r\n          <ListItemText\r\n            primary=\"Stock market: do you know it?\"\r\n            secondary={\"The best tips to avoid mistakes with stock market...\"}\r\n          />\r\n        </ListItem>\r\n        <Divider variant=\"inset\" component=\"li\" />\r\n\r\n        <ListItem alignItems=\"flex-start\">\r\n          <ListItemAvatar>\r\n            <Avatar alt=\"bitcoin\" src=\"https://s3.criptofacil.com/wp-content/uploads/2020/09/famoso-investidor-esta-muito-otimista-sobre-bitcoin.jpg\" />\r\n          </ListItemAvatar>\r\n          <ListItemText\r\n            primary=\"Why this coin is so strong?\"\r\n            secondary={\"We talked with several investors to master Bitcoin and...\"}\r\n          />\r\n        </ListItem>\r\n        <Divider variant=\"inset\" component=\"li\" />\r\n        \r\n        <ListItem alignItems=\"flex-start\">\r\n          <ListItemAvatar>\r\n            <Avatar alt=\"bitcoin\" src=\"https://responsive.fxempire.com/cover/1845x1230/webp-lossy-70.q50/_fxempire_/2020/03/Stocks-Up.jpg\" />\r\n          </ListItemAvatar>\r\n          <ListItemText\r\n            primary=\"Free course!\"\r\n            secondary={\"We have great news for you! We have made a partnershi...\"}\r\n          />\r\n        </ListItem>\r\n      </List>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlogTipsComponent;\r\n","import React from \"react\";\r\nimport { Box, Grid, Typography } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport StyledCard from \"../../_shared/components/StyledCard\";\r\nimport FindInvestmentComponent from \"../investment/FindInvestmentComponent\";\r\nimport DashboardContext from \"./DashboardContext\";\r\nimport InvestmentsResultsComponent from \"../investment/InvestmentsResultsComponent\";\r\nimport { CRYPTOCURRENCY, STOCK } from \"../../../constants/general\";\r\nimport {\r\n  requestPaymentCrypto,\r\n  requestPaymentStock,\r\n} from \"../../../services/paymentService\";\r\nimport { getStocksByList } from \"../../../services/stocksService\";\r\nimport { getCryptosByList } from \"../../../services/cryptosService\";\r\nimport WalletComponent from \"./WalletComponent\";\r\nimport { distinct } from \"../../../utils/array\";\r\nimport PageLoader from \"../../_shared/components/PageLoader\";\r\nimport StatementComponent from \"./StatementComponent\";\r\nimport BlogTipsComponent from \"./BlogTipsComponent\";\r\n\r\nconst HomepageComponent = (props) => {\r\n  const history = useHistory();\r\n\r\n  //state\r\n  const [wallet, setWallet] = React.useState([]);\r\n  const [resultsData, setResultsData] = React.useState(null);\r\n  const [isLoadingDashboard, setIsLoadingDashboard] = React.useState(false);\r\n  const [isPaymentLoading, setIsPaymentLoading] = React.useState(false);\r\n\r\n  const [walletData, setWalletData] = React.useState({ stocksData: null, cryptosData: null });\r\n  const [actualBalance, setActualBalance] = React.useState(0);\r\n\r\n\tconst [statement, setStatement] = React.useState([]);\r\n\r\n  //listeners\r\n  React.useEffect(() => {\r\n\t\tsetIsLoadingDashboard(true);\r\n\t\tupdateWalletData();\r\n  }, [wallet]);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tsetActualBalance(getBalance());\r\n\t\tsetIsLoadingDashboard(false);\r\n  }, [walletData]);\r\n\r\n  //handlers\r\n  const updateWalletData = async () => {\r\n    if (wallet.length === 0) {\r\n      return setWalletData(null);\r\n    }\r\n\r\n    let stocksData;\r\n    let cryptosData;\r\n\r\n    const stockWallet = wallet.filter((t) => t.type === STOCK);\r\n    if (stockWallet.length) {\r\n      stocksData = await getStocksByList(\r\n        distinct(stockWallet.map((t) => t.symbol))\r\n      );\r\n    }\r\n\r\n    const cryptoWallet = wallet.filter((t) => t.type === CRYPTOCURRENCY);\r\n    if (cryptoWallet.length) {\r\n      cryptosData = await getCryptosByList(cryptoWallet.map((t) => t.symbol));\r\n\t\t}\r\n\t\t\r\n\t\tsetWalletData({\r\n\t\t\tstocksData,\r\n\t\t\tcryptosData\r\n\t\t})\r\n  };\r\n\r\n  const getBalance = () => {\r\n    if (!walletData) {\r\n      return 0;\r\n\t\t}\r\n\t\t\r\n\t\tlet stocksBalance = 0;\r\n\t\tconst stockWallet = wallet.filter((t) => t.type === STOCK);\r\n\r\n    if (stockWallet.length) {\r\n\t\t\tstocksBalance = stockWallet.map(t => {\r\n\t\t\t\tif(walletData.stocksData) {\r\n\t\t\t\t\treturn t.volume * walletData.stocksData.find(y => y.symbol === t.symbol).last\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t}).reduce((a,b) => a+b);\r\n\t\t}\r\n\t\t\t\r\n\t\tlet cryptosBalance = 0;\r\n\t\tconst cryptoWallet = wallet.filter((t) => t.type === CRYPTOCURRENCY);\r\n\r\n    if (cryptoWallet.length) {\r\n\t\t\tcryptosBalance = cryptoWallet.map(t => {\r\n\t\t\t\tif(walletData.cryptosData) {\r\n\t\t\t\t\treturn t.volume * walletData.cryptosData.find(y => y.symbol === t.symbol).regularMarketPrice\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t}).reduce((a,b) => a+b);\r\n\t\t}\r\n\r\n    return (stocksBalance + cryptosBalance).toFixed(2);\r\n  };\r\n\r\n  const buyInvestment = (itemData, amount, itemType, quantityStock = 1) => {\r\n    setIsPaymentLoading(true);\r\n\r\n    if (itemType === CRYPTOCURRENCY) {\r\n      buyCrypto(itemData, amount);\r\n    } else if (itemType === STOCK) {\r\n      buyStock(itemData, quantityStock);\r\n    }\r\n  };\r\n\r\n  const buyCrypto = (cryptoData, amount) =>\r\n    requestPaymentCrypto(cryptoData, amount).then(handleResponse);\r\n\r\n  const buyStock = (stockData, quantity) =>\r\n    requestPaymentStock(stockData, quantity).then(handleResponse);\r\n\r\n  const handleResponse = (res) => {\r\n    if (res.success) {\r\n      addItemToWallet(res.data);\r\n\t\t\tsetResultsData(null);\r\n\t\t\tsetStatement(statement.concat([{\r\n\t\t\t\ttype: \"IN\",\r\n\t\t\t\tdata: res.data\r\n\t\t\t}]))\r\n    }\r\n\r\n    setIsPaymentLoading(false);\r\n  };\r\n\r\n  const addItemToWallet = (item) => setWallet(wallet.concat([item]));\r\n\r\n\r\n\tif (isLoadingDashboard) return <PageLoader />;\r\n\r\n  return (\r\n    <DashboardContext.Provider\r\n      value={{\r\n        wallet,\r\n        addItemToWallet,\r\n        buyInvestment,\r\n        setResultsData,\r\n        isPaymentLoading,\r\n      }}\r\n    >\r\n      <Box className=\"wrappeer\">\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={4}>\r\n            <Box mb={2}>\r\n              <StyledCard elevation={1} title={\"Actual balance\"}>\r\n\t\t\t\t\t\t\t\t<Typography variant={\"h3\"}>\r\n                \t$ {actualBalance}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n              </StyledCard>\r\n            </Box>\r\n\r\n\t\t\t\t\t\t<Box mb={2}>\r\n\t            <StyledCard elevation={1} title={\"Statement\"}>\r\n\t\t\t\t\t\t\t\t<StatementComponent statement={statement} />\r\n\t\t\t\t\t\t\t</StyledCard>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Box mb={2}>\r\n            \t<StyledCard elevation={1} title={\"Blog tips\"}>\r\n\t\t\t\t\t\t\t\t<BlogTipsComponent />\r\n\t\t\t\t\t\t\t</StyledCard>\r\n\t\t\t\t\t\t</Box>\r\n          </Grid>\r\n          <Grid item xs={12} md={8}>\r\n            <StyledCard elevation={1} title={\"Your wallet\"}>\r\n              <WalletComponent wallet={wallet} walletData={walletData} />\r\n            </StyledCard>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n\r\n      <FindInvestmentComponent setResultsData={setResultsData} />\r\n\r\n      {resultsData && (\r\n        <InvestmentsResultsComponent\r\n          clearResults={() => setResultsData(null)}\r\n          resultsData={resultsData}\r\n        />\r\n      )}\r\n    </DashboardContext.Provider>\r\n  );\r\n};\r\n\r\nexport default HomepageComponent;\r\n","export function distinct(arr) {\r\n  return arr.filter((value, i, self) => self.indexOf(value) === i)\r\n}"],"sourceRoot":""}